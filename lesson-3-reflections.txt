What is a Thread in Java?

	- A Thread is a Java class which extents the Object class and implements the Runnable interface. This means that a thread
	is a thread of execution in a program. Java programs can have multiple threads and this is called multitasking. One thread 
	can do only one task and the developer assigns that task

What is AsyncTask in Java?

	- AsyncTask is a Java abstract class that provides the user a background thread to do some tasks on it. Usually when
	the app needs to do some heavy data lifting or do some tasks that will take some amount of time, it is better to
	NOT make them on the main thread, because it will crash. From there it comes one of the UI rules in android:
	Never block the main UI.

What is a Loader in Java?

	- A Loader lets you fetch some data from data sources. It is very similar to AsyncTask, like working on a different. There are 
	other benefits from the Loader like:
		- Loaders provide callback methods when events occur on the UI thread.
		- Loaders cache results across configuration changes to prevent duplicate queries.

What is the difference between Loader and AsyncTask?

	- The Loader is tied to the Activity/Fragment lifecycle. Once the Activity/Fragment dies, the loaders dies as well. Unlike Loader,
	AsyncTask is not tied to the lifecycle of the Activty/Fragment and it dies only when it has finished its task.

What is a LoaderManager?

	- LoaderManager is an abstract interface in Java which allows the developer to manage programs with multiple loaders.